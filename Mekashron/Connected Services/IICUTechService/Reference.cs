//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mekashron.IICUTechService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IICUTechService.IICUTech")]
    public interface IICUTech {
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message LoginRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.LoginResponse Login(Mekashron.IICUTechService.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#Login", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.LoginResponse> LoginAsync(Mekashron.IICUTechService.LoginRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message RegisterNewCustomerRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#RegisterNewCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.RegisterNewCustomerResponse RegisterNewCustomer(Mekashron.IICUTechService.RegisterNewCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#RegisterNewCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.RegisterNewCustomerResponse> RegisterNewCustomerAsync(Mekashron.IICUTechService.RegisterNewCustomerRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetCustomerInfoRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetCustomerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetCustomerInfoResponse GetCustomerInfo(Mekashron.IICUTechService.GetCustomerInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetCustomerInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetCustomerInfoResponse> GetCustomerInfoAsync(Mekashron.IICUTechService.GetCustomerInfoRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message UpdateCustomerRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#UpdateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.UpdateCustomerResponse UpdateCustomer(Mekashron.IICUTechService.UpdateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#UpdateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.UpdateCustomerResponse> UpdateCustomerAsync(Mekashron.IICUTechService.UpdateCustomerRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetVersionRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetVersionResponse GetVersion(Mekashron.IICUTechService.GetVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetVersionResponse> GetVersionAsync(Mekashron.IICUTechService.GetVersionRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetLocationsRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetLocations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetLocationsResponse GetLocations(Mekashron.IICUTechService.GetLocationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetLocations", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetLocationsResponse> GetLocationsAsync(Mekashron.IICUTechService.GetLocationsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetCamerasRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetCameras", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetCamerasResponse GetCameras(Mekashron.IICUTechService.GetCamerasRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetCameras", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetCamerasResponse> GetCamerasAsync(Mekashron.IICUTechService.GetCamerasRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message SetLocationRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SetLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.SetLocationResponse SetLocation(Mekashron.IICUTechService.SetLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SetLocation", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SetLocationResponse> SetLocationAsync(Mekashron.IICUTechService.SetLocationRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message SetCameraRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SetCamera", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.SetCameraResponse SetCamera(Mekashron.IICUTechService.SetCameraRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SetCamera", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SetCameraResponse> SetCameraAsync(Mekashron.IICUTechService.SetCameraRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message SetAlarmRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SetAlarm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.SetAlarmResponse SetAlarm(Mekashron.IICUTechService.SetAlarmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SetAlarm", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SetAlarmResponse> SetAlarmAsync(Mekashron.IICUTechService.SetAlarmRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message PushRegisterDeviceRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#PushRegisterDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.PushRegisterDeviceResponse PushRegisterDevice(Mekashron.IICUTechService.PushRegisterDeviceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#PushRegisterDevice", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.PushRegisterDeviceResponse> PushRegisterDeviceAsync(Mekashron.IICUTechService.PushRegisterDeviceRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message PushMessageRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#PushMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.PushMessageResponse PushMessage(Mekashron.IICUTechService.PushMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#PushMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.PushMessageResponse> PushMessageAsync(Mekashron.IICUTechService.PushMessageRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message SyncCamerasRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SyncCameras", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.SyncCamerasResponse SyncCameras(Mekashron.IICUTechService.SyncCamerasRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#SyncCameras", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SyncCamerasResponse> SyncCamerasAsync(Mekashron.IICUTechService.SyncCamerasRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetNotificationsRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetNotifications", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetNotificationsResponse GetNotifications(Mekashron.IICUTechService.GetNotificationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetNotifications", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetNotificationsResponse> GetNotificationsAsync(Mekashron.IICUTechService.GetNotificationsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetNotificationsCountRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetNotificationsCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetNotificationsCountResponse GetNotificationsCount(Mekashron.IICUTechService.GetNotificationsCountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetNotificationsCount", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetNotificationsCountResponse> GetNotificationsCountAsync(Mekashron.IICUTechService.GetNotificationsCountRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message AddClipRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#AddClip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.AddClipResponse AddClip(Mekashron.IICUTechService.AddClipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#AddClip", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.AddClipResponse> AddClipAsync(Mekashron.IICUTechService.AddClipRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetClipsRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetClips", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetClipsResponse GetClips(Mekashron.IICUTechService.GetClipsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetClips", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetClipsResponse> GetClipsAsync(Mekashron.IICUTechService.GetClipsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message GetClipsCountRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetClipsCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.GetClipsCountResponse GetClipsCount(Mekashron.IICUTechService.GetClipsCountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#GetClipsCount", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetClipsCountResponse> GetClipsCountAsync(Mekashron.IICUTechService.GetClipsCountRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message DeleteNotificationRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#DeleteNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.DeleteNotificationResponse DeleteNotification(Mekashron.IICUTechService.DeleteNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#DeleteNotification", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.DeleteNotificationResponse> DeleteNotificationAsync(Mekashron.IICUTechService.DeleteNotificationRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message EncryptRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#Encrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.EncryptResponse Encrypt(Mekashron.IICUTechService.EncryptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#Encrypt", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.EncryptResponse> EncryptAsync(Mekashron.IICUTechService.EncryptRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:ICUTech.Intf-IICUTech) of message CryptRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#Crypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Mekashron.IICUTechService.CryptResponse Crypt(Mekashron.IICUTechService.CryptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ICUTech.Intf-IICUTech#Crypt", ReplyAction="*")]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.CryptResponse> CryptAsync(Mekashron.IICUTechService.CryptRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Login", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string IPs;
        
        public LoginRequest() {
        }
        
        public LoginRequest(string UserName, string Password, string IPs) {
            this.UserName = UserName;
            this.Password = Password;
            this.IPs = IPs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public LoginResponse() {
        }
        
        public LoginResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterNewCustomer", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class RegisterNewCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string Email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string FirstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string LastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string Mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int CountryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public int aID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=7)]
        public string SignupIP;
        
        public RegisterNewCustomerRequest() {
        }
        
        public RegisterNewCustomerRequest(string Email, string Password, string FirstName, string LastName, string Mobile, int CountryID, int aID, string SignupIP) {
            this.Email = Email;
            this.Password = Password;
            this.FirstName = FirstName;
            this.LastName = LastName;
            this.Mobile = Mobile;
            this.CountryID = CountryID;
            this.aID = aID;
            this.SignupIP = SignupIP;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterNewCustomerResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class RegisterNewCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public RegisterNewCustomerResponse() {
        }
        
        public RegisterNewCustomerResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerInfo", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetCustomerInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        public GetCustomerInfoRequest() {
        }
        
        public GetCustomerInfoRequest(int EntityID, string Username, string Password) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerInfoResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetCustomerInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetCustomerInfoResponse() {
        }
        
        public GetCustomerInfoResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCustomer", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class UpdateCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string ValuesArray;
        
        public UpdateCustomerRequest() {
        }
        
        public UpdateCustomerRequest(int EntityID, string Username, string Password, string ValuesArray) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.ValuesArray = ValuesArray;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCustomerResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class UpdateCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public UpdateCustomerResponse() {
        }
        
        public UpdateCustomerResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersion", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetVersionRequest {
        
        public GetVersionRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetVersionResponse() {
        }
        
        public GetVersionResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocations", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetLocationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        public GetLocationsRequest() {
        }
        
        public GetLocationsRequest(int EntityID, string Username, string Password) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationsResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetLocationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetLocationsResponse() {
        }
        
        public GetLocationsResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCameras", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetCamerasRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        public GetCamerasRequest() {
        }
        
        public GetCamerasRequest(int EntityID, string Username, string Password) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCamerasResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetCamerasResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetCamerasResponse() {
        }
        
        public GetCamerasResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetLocation", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SetLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string IP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int MediaPort;
        
        public SetLocationRequest() {
        }
        
        public SetLocationRequest(int EntityID, string Username, string Password, string IP, int Port, int MediaPort) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.IP = IP;
            this.Port = Port;
            this.MediaPort = MediaPort;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetLocationResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SetLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public SetLocationResponse() {
        }
        
        public SetLocationResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCamera", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SetCameraRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string LocationName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string URL;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int CameraId;
        
        public SetCameraRequest() {
        }
        
        public SetCameraRequest(int EntityID, string Username, string Password, string LocationName, string URL, int CameraId) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.LocationName = LocationName;
            this.URL = URL;
            this.CameraId = CameraId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCameraResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SetCameraResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public SetCameraResponse() {
        }
        
        public SetCameraResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAlarm", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SetAlarmRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public int Status;
        
        public SetAlarmRequest() {
        }
        
        public SetAlarmRequest(int EntityID, string Username, string Password, int Status) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAlarmResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SetAlarmResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public SetAlarmResponse() {
        }
        
        public SetAlarmResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushRegisterDevice", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class PushRegisterDeviceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string UDID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string DeviceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int TypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public bool AllowNotification;
        
        public PushRegisterDeviceRequest() {
        }
        
        public PushRegisterDeviceRequest(int EntityID, string Username, string Password, string UDID, string DeviceID, int TypeId, bool AllowNotification) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.UDID = UDID;
            this.DeviceID = DeviceID;
            this.TypeId = TypeId;
            this.AllowNotification = AllowNotification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushRegisterDeviceResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class PushRegisterDeviceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public PushRegisterDeviceResponse() {
        }
        
        public PushRegisterDeviceResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushMessage", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class PushMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string text;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string FunctionPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int KindType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public int KindID;
        
        public PushMessageRequest() {
        }
        
        public PushMessageRequest(int EntityID, string Username, string Password, string text, string FunctionPassword, int KindType, int KindID) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.text = text;
            this.FunctionPassword = FunctionPassword;
            this.KindType = KindType;
            this.KindID = KindID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushMessageResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class PushMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public PushMessageResponse() {
        }
        
        public PushMessageResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncCameras", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SyncCamerasRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public int CamerasCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int[] CameraIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string[] CameraNames;
        
        public SyncCamerasRequest() {
        }
        
        public SyncCamerasRequest(int EntityID, string Username, string Password, int CamerasCount, int[] CameraIds, string[] CameraNames) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.CamerasCount = CamerasCount;
            this.CameraIds = CameraIds;
            this.CameraNames = CameraNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncCamerasResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class SyncCamerasResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public SyncCamerasResponse() {
        }
        
        public SyncCamerasResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNotifications", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetNotificationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string UDID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int LimitFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public int LimitTo;
        
        public GetNotificationsRequest() {
        }
        
        public GetNotificationsRequest(int EntityID, string Username, string Password, string UDID, int ResultType, int LimitFrom, int LimitTo) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.UDID = UDID;
            this.ResultType = ResultType;
            this.LimitFrom = LimitFrom;
            this.LimitTo = LimitTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNotificationsResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetNotificationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetNotificationsResponse() {
        }
        
        public GetNotificationsResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNotificationsCount", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetNotificationsCountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string UDID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int ResultType;
        
        public GetNotificationsCountRequest() {
        }
        
        public GetNotificationsCountRequest(int EntityID, string Username, string Password, string UDID, int ResultType) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.UDID = UDID;
            this.ResultType = ResultType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNotificationsCountResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetNotificationsCountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetNotificationsCountResponse() {
        }
        
        public GetNotificationsCountResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddClip", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class AddClipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public int cameraID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int clipID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int ClipLength;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public string ClipDate;
        
        public AddClipRequest() {
        }
        
        public AddClipRequest(int EntityId, string UserName, string Password, int cameraID, int clipID, int ClipLength, string ClipDate) {
            this.EntityId = EntityId;
            this.UserName = UserName;
            this.Password = Password;
            this.cameraID = cameraID;
            this.clipID = clipID;
            this.ClipLength = ClipLength;
            this.ClipDate = ClipDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddClipResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class AddClipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public AddClipResponse() {
        }
        
        public AddClipResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClips", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetClipsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public int ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int cameraID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string DateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public string DateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=7)]
        public int LimitFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=8)]
        public int LimitTo;
        
        public GetClipsRequest() {
        }
        
        public GetClipsRequest(int EntityId, string UserName, string Password, int ResultType, int cameraID, string DateFrom, string DateTo, int LimitFrom, int LimitTo) {
            this.EntityId = EntityId;
            this.UserName = UserName;
            this.Password = Password;
            this.ResultType = ResultType;
            this.cameraID = cameraID;
            this.DateFrom = DateFrom;
            this.DateTo = DateTo;
            this.LimitFrom = LimitFrom;
            this.LimitTo = LimitTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClipsResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetClipsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetClipsResponse() {
        }
        
        public GetClipsResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClipsCount", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetClipsCountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public int ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int cameraID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string DateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public string DateTo;
        
        public GetClipsCountRequest() {
        }
        
        public GetClipsCountRequest(int EntityId, string UserName, string Password, int ResultType, int cameraID, string DateFrom, string DateTo) {
            this.EntityId = EntityId;
            this.UserName = UserName;
            this.Password = Password;
            this.ResultType = ResultType;
            this.cameraID = cameraID;
            this.DateFrom = DateFrom;
            this.DateTo = DateTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClipsCountResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class GetClipsCountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public GetClipsCountResponse() {
        }
        
        public GetClipsCountResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteNotification", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class DeleteNotificationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public int NotificationID;
        
        public DeleteNotificationRequest() {
        }
        
        public DeleteNotificationRequest(int EntityID, string Username, string Password, int NotificationID) {
            this.EntityID = EntityID;
            this.Username = Username;
            this.Password = Password;
            this.NotificationID = NotificationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteNotificationResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class DeleteNotificationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public DeleteNotificationResponse() {
        }
        
        public DeleteNotificationResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Encrypt", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class EncryptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string DataString;
        
        public EncryptRequest() {
        }
        
        public EncryptRequest(string DataString) {
            this.DataString = DataString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EncryptResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class EncryptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public EncryptResponse() {
        }
        
        public EncryptResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Crypt", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class CryptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int EntityId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string FuncPassword;
        
        public CryptRequest() {
        }
        
        public CryptRequest(int EntityId, string UserName, string Password, string FuncPassword) {
            this.EntityId = EntityId;
            this.UserName = UserName;
            this.Password = Password;
            this.FuncPassword = FuncPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CryptResponse", WrapperNamespace="urn:ICUTech.Intf-IICUTech", IsWrapped=true)]
    public partial class CryptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public CryptResponse() {
        }
        
        public CryptResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IICUTechChannel : Mekashron.IICUTechService.IICUTech, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ICUTechClient : System.ServiceModel.ClientBase<Mekashron.IICUTechService.IICUTech>, Mekashron.IICUTechService.IICUTech {
        
        public ICUTechClient() {
        }
        
        public ICUTechClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ICUTechClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ICUTechClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ICUTechClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.LoginResponse Mekashron.IICUTechService.IICUTech.Login(Mekashron.IICUTechService.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public string Login(string UserName, string Password, string IPs) {
            Mekashron.IICUTechService.LoginRequest inValue = new Mekashron.IICUTechService.LoginRequest();
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.IPs = IPs;
            Mekashron.IICUTechService.LoginResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).Login(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.LoginResponse> Mekashron.IICUTechService.IICUTech.LoginAsync(Mekashron.IICUTechService.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.LoginResponse> LoginAsync(string UserName, string Password, string IPs) {
            Mekashron.IICUTechService.LoginRequest inValue = new Mekashron.IICUTechService.LoginRequest();
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.IPs = IPs;
            return ((Mekashron.IICUTechService.IICUTech)(this)).LoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.RegisterNewCustomerResponse Mekashron.IICUTechService.IICUTech.RegisterNewCustomer(Mekashron.IICUTechService.RegisterNewCustomerRequest request) {
            return base.Channel.RegisterNewCustomer(request);
        }
        
        public string RegisterNewCustomer(string Email, string Password, string FirstName, string LastName, string Mobile, int CountryID, int aID, string SignupIP) {
            Mekashron.IICUTechService.RegisterNewCustomerRequest inValue = new Mekashron.IICUTechService.RegisterNewCustomerRequest();
            inValue.Email = Email;
            inValue.Password = Password;
            inValue.FirstName = FirstName;
            inValue.LastName = LastName;
            inValue.Mobile = Mobile;
            inValue.CountryID = CountryID;
            inValue.aID = aID;
            inValue.SignupIP = SignupIP;
            Mekashron.IICUTechService.RegisterNewCustomerResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).RegisterNewCustomer(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.RegisterNewCustomerResponse> Mekashron.IICUTechService.IICUTech.RegisterNewCustomerAsync(Mekashron.IICUTechService.RegisterNewCustomerRequest request) {
            return base.Channel.RegisterNewCustomerAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.RegisterNewCustomerResponse> RegisterNewCustomerAsync(string Email, string Password, string FirstName, string LastName, string Mobile, int CountryID, int aID, string SignupIP) {
            Mekashron.IICUTechService.RegisterNewCustomerRequest inValue = new Mekashron.IICUTechService.RegisterNewCustomerRequest();
            inValue.Email = Email;
            inValue.Password = Password;
            inValue.FirstName = FirstName;
            inValue.LastName = LastName;
            inValue.Mobile = Mobile;
            inValue.CountryID = CountryID;
            inValue.aID = aID;
            inValue.SignupIP = SignupIP;
            return ((Mekashron.IICUTechService.IICUTech)(this)).RegisterNewCustomerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetCustomerInfoResponse Mekashron.IICUTechService.IICUTech.GetCustomerInfo(Mekashron.IICUTechService.GetCustomerInfoRequest request) {
            return base.Channel.GetCustomerInfo(request);
        }
        
        public string GetCustomerInfo(int EntityID, string Username, string Password) {
            Mekashron.IICUTechService.GetCustomerInfoRequest inValue = new Mekashron.IICUTechService.GetCustomerInfoRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            Mekashron.IICUTechService.GetCustomerInfoResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetCustomerInfo(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetCustomerInfoResponse> Mekashron.IICUTechService.IICUTech.GetCustomerInfoAsync(Mekashron.IICUTechService.GetCustomerInfoRequest request) {
            return base.Channel.GetCustomerInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetCustomerInfoResponse> GetCustomerInfoAsync(int EntityID, string Username, string Password) {
            Mekashron.IICUTechService.GetCustomerInfoRequest inValue = new Mekashron.IICUTechService.GetCustomerInfoRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetCustomerInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.UpdateCustomerResponse Mekashron.IICUTechService.IICUTech.UpdateCustomer(Mekashron.IICUTechService.UpdateCustomerRequest request) {
            return base.Channel.UpdateCustomer(request);
        }
        
        public string UpdateCustomer(int EntityID, string Username, string Password, string ValuesArray) {
            Mekashron.IICUTechService.UpdateCustomerRequest inValue = new Mekashron.IICUTechService.UpdateCustomerRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.ValuesArray = ValuesArray;
            Mekashron.IICUTechService.UpdateCustomerResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).UpdateCustomer(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.UpdateCustomerResponse> Mekashron.IICUTechService.IICUTech.UpdateCustomerAsync(Mekashron.IICUTechService.UpdateCustomerRequest request) {
            return base.Channel.UpdateCustomerAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.UpdateCustomerResponse> UpdateCustomerAsync(int EntityID, string Username, string Password, string ValuesArray) {
            Mekashron.IICUTechService.UpdateCustomerRequest inValue = new Mekashron.IICUTechService.UpdateCustomerRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.ValuesArray = ValuesArray;
            return ((Mekashron.IICUTechService.IICUTech)(this)).UpdateCustomerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetVersionResponse Mekashron.IICUTechService.IICUTech.GetVersion(Mekashron.IICUTechService.GetVersionRequest request) {
            return base.Channel.GetVersion(request);
        }
        
        public string GetVersion() {
            Mekashron.IICUTechService.GetVersionRequest inValue = new Mekashron.IICUTechService.GetVersionRequest();
            Mekashron.IICUTechService.GetVersionResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetVersion(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetVersionResponse> Mekashron.IICUTechService.IICUTech.GetVersionAsync(Mekashron.IICUTechService.GetVersionRequest request) {
            return base.Channel.GetVersionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetVersionResponse> GetVersionAsync() {
            Mekashron.IICUTechService.GetVersionRequest inValue = new Mekashron.IICUTechService.GetVersionRequest();
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetVersionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetLocationsResponse Mekashron.IICUTechService.IICUTech.GetLocations(Mekashron.IICUTechService.GetLocationsRequest request) {
            return base.Channel.GetLocations(request);
        }
        
        public string GetLocations(int EntityID, string Username, string Password) {
            Mekashron.IICUTechService.GetLocationsRequest inValue = new Mekashron.IICUTechService.GetLocationsRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            Mekashron.IICUTechService.GetLocationsResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetLocations(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetLocationsResponse> Mekashron.IICUTechService.IICUTech.GetLocationsAsync(Mekashron.IICUTechService.GetLocationsRequest request) {
            return base.Channel.GetLocationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetLocationsResponse> GetLocationsAsync(int EntityID, string Username, string Password) {
            Mekashron.IICUTechService.GetLocationsRequest inValue = new Mekashron.IICUTechService.GetLocationsRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetLocationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetCamerasResponse Mekashron.IICUTechService.IICUTech.GetCameras(Mekashron.IICUTechService.GetCamerasRequest request) {
            return base.Channel.GetCameras(request);
        }
        
        public string GetCameras(int EntityID, string Username, string Password) {
            Mekashron.IICUTechService.GetCamerasRequest inValue = new Mekashron.IICUTechService.GetCamerasRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            Mekashron.IICUTechService.GetCamerasResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetCameras(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetCamerasResponse> Mekashron.IICUTechService.IICUTech.GetCamerasAsync(Mekashron.IICUTechService.GetCamerasRequest request) {
            return base.Channel.GetCamerasAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetCamerasResponse> GetCamerasAsync(int EntityID, string Username, string Password) {
            Mekashron.IICUTechService.GetCamerasRequest inValue = new Mekashron.IICUTechService.GetCamerasRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetCamerasAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.SetLocationResponse Mekashron.IICUTechService.IICUTech.SetLocation(Mekashron.IICUTechService.SetLocationRequest request) {
            return base.Channel.SetLocation(request);
        }
        
        public string SetLocation(int EntityID, string Username, string Password, string IP, int Port, int MediaPort) {
            Mekashron.IICUTechService.SetLocationRequest inValue = new Mekashron.IICUTechService.SetLocationRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.IP = IP;
            inValue.Port = Port;
            inValue.MediaPort = MediaPort;
            Mekashron.IICUTechService.SetLocationResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).SetLocation(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SetLocationResponse> Mekashron.IICUTechService.IICUTech.SetLocationAsync(Mekashron.IICUTechService.SetLocationRequest request) {
            return base.Channel.SetLocationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.SetLocationResponse> SetLocationAsync(int EntityID, string Username, string Password, string IP, int Port, int MediaPort) {
            Mekashron.IICUTechService.SetLocationRequest inValue = new Mekashron.IICUTechService.SetLocationRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.IP = IP;
            inValue.Port = Port;
            inValue.MediaPort = MediaPort;
            return ((Mekashron.IICUTechService.IICUTech)(this)).SetLocationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.SetCameraResponse Mekashron.IICUTechService.IICUTech.SetCamera(Mekashron.IICUTechService.SetCameraRequest request) {
            return base.Channel.SetCamera(request);
        }
        
        public string SetCamera(int EntityID, string Username, string Password, string LocationName, string URL, int CameraId) {
            Mekashron.IICUTechService.SetCameraRequest inValue = new Mekashron.IICUTechService.SetCameraRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.LocationName = LocationName;
            inValue.URL = URL;
            inValue.CameraId = CameraId;
            Mekashron.IICUTechService.SetCameraResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).SetCamera(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SetCameraResponse> Mekashron.IICUTechService.IICUTech.SetCameraAsync(Mekashron.IICUTechService.SetCameraRequest request) {
            return base.Channel.SetCameraAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.SetCameraResponse> SetCameraAsync(int EntityID, string Username, string Password, string LocationName, string URL, int CameraId) {
            Mekashron.IICUTechService.SetCameraRequest inValue = new Mekashron.IICUTechService.SetCameraRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.LocationName = LocationName;
            inValue.URL = URL;
            inValue.CameraId = CameraId;
            return ((Mekashron.IICUTechService.IICUTech)(this)).SetCameraAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.SetAlarmResponse Mekashron.IICUTechService.IICUTech.SetAlarm(Mekashron.IICUTechService.SetAlarmRequest request) {
            return base.Channel.SetAlarm(request);
        }
        
        public string SetAlarm(int EntityID, string Username, string Password, int Status) {
            Mekashron.IICUTechService.SetAlarmRequest inValue = new Mekashron.IICUTechService.SetAlarmRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.Status = Status;
            Mekashron.IICUTechService.SetAlarmResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).SetAlarm(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SetAlarmResponse> Mekashron.IICUTechService.IICUTech.SetAlarmAsync(Mekashron.IICUTechService.SetAlarmRequest request) {
            return base.Channel.SetAlarmAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.SetAlarmResponse> SetAlarmAsync(int EntityID, string Username, string Password, int Status) {
            Mekashron.IICUTechService.SetAlarmRequest inValue = new Mekashron.IICUTechService.SetAlarmRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.Status = Status;
            return ((Mekashron.IICUTechService.IICUTech)(this)).SetAlarmAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.PushRegisterDeviceResponse Mekashron.IICUTechService.IICUTech.PushRegisterDevice(Mekashron.IICUTechService.PushRegisterDeviceRequest request) {
            return base.Channel.PushRegisterDevice(request);
        }
        
        public string PushRegisterDevice(int EntityID, string Username, string Password, string UDID, string DeviceID, int TypeId, bool AllowNotification) {
            Mekashron.IICUTechService.PushRegisterDeviceRequest inValue = new Mekashron.IICUTechService.PushRegisterDeviceRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.UDID = UDID;
            inValue.DeviceID = DeviceID;
            inValue.TypeId = TypeId;
            inValue.AllowNotification = AllowNotification;
            Mekashron.IICUTechService.PushRegisterDeviceResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).PushRegisterDevice(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.PushRegisterDeviceResponse> Mekashron.IICUTechService.IICUTech.PushRegisterDeviceAsync(Mekashron.IICUTechService.PushRegisterDeviceRequest request) {
            return base.Channel.PushRegisterDeviceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.PushRegisterDeviceResponse> PushRegisterDeviceAsync(int EntityID, string Username, string Password, string UDID, string DeviceID, int TypeId, bool AllowNotification) {
            Mekashron.IICUTechService.PushRegisterDeviceRequest inValue = new Mekashron.IICUTechService.PushRegisterDeviceRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.UDID = UDID;
            inValue.DeviceID = DeviceID;
            inValue.TypeId = TypeId;
            inValue.AllowNotification = AllowNotification;
            return ((Mekashron.IICUTechService.IICUTech)(this)).PushRegisterDeviceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.PushMessageResponse Mekashron.IICUTechService.IICUTech.PushMessage(Mekashron.IICUTechService.PushMessageRequest request) {
            return base.Channel.PushMessage(request);
        }
        
        public string PushMessage(int EntityID, string Username, string Password, string text, string FunctionPassword, int KindType, int KindID) {
            Mekashron.IICUTechService.PushMessageRequest inValue = new Mekashron.IICUTechService.PushMessageRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.text = text;
            inValue.FunctionPassword = FunctionPassword;
            inValue.KindType = KindType;
            inValue.KindID = KindID;
            Mekashron.IICUTechService.PushMessageResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).PushMessage(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.PushMessageResponse> Mekashron.IICUTechService.IICUTech.PushMessageAsync(Mekashron.IICUTechService.PushMessageRequest request) {
            return base.Channel.PushMessageAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.PushMessageResponse> PushMessageAsync(int EntityID, string Username, string Password, string text, string FunctionPassword, int KindType, int KindID) {
            Mekashron.IICUTechService.PushMessageRequest inValue = new Mekashron.IICUTechService.PushMessageRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.text = text;
            inValue.FunctionPassword = FunctionPassword;
            inValue.KindType = KindType;
            inValue.KindID = KindID;
            return ((Mekashron.IICUTechService.IICUTech)(this)).PushMessageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.SyncCamerasResponse Mekashron.IICUTechService.IICUTech.SyncCameras(Mekashron.IICUTechService.SyncCamerasRequest request) {
            return base.Channel.SyncCameras(request);
        }
        
        public string SyncCameras(int EntityID, string Username, string Password, int CamerasCount, int[] CameraIds, string[] CameraNames) {
            Mekashron.IICUTechService.SyncCamerasRequest inValue = new Mekashron.IICUTechService.SyncCamerasRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.CamerasCount = CamerasCount;
            inValue.CameraIds = CameraIds;
            inValue.CameraNames = CameraNames;
            Mekashron.IICUTechService.SyncCamerasResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).SyncCameras(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.SyncCamerasResponse> Mekashron.IICUTechService.IICUTech.SyncCamerasAsync(Mekashron.IICUTechService.SyncCamerasRequest request) {
            return base.Channel.SyncCamerasAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.SyncCamerasResponse> SyncCamerasAsync(int EntityID, string Username, string Password, int CamerasCount, int[] CameraIds, string[] CameraNames) {
            Mekashron.IICUTechService.SyncCamerasRequest inValue = new Mekashron.IICUTechService.SyncCamerasRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.CamerasCount = CamerasCount;
            inValue.CameraIds = CameraIds;
            inValue.CameraNames = CameraNames;
            return ((Mekashron.IICUTechService.IICUTech)(this)).SyncCamerasAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetNotificationsResponse Mekashron.IICUTechService.IICUTech.GetNotifications(Mekashron.IICUTechService.GetNotificationsRequest request) {
            return base.Channel.GetNotifications(request);
        }
        
        public string GetNotifications(int EntityID, string Username, string Password, string UDID, int ResultType, int LimitFrom, int LimitTo) {
            Mekashron.IICUTechService.GetNotificationsRequest inValue = new Mekashron.IICUTechService.GetNotificationsRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.UDID = UDID;
            inValue.ResultType = ResultType;
            inValue.LimitFrom = LimitFrom;
            inValue.LimitTo = LimitTo;
            Mekashron.IICUTechService.GetNotificationsResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetNotifications(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetNotificationsResponse> Mekashron.IICUTechService.IICUTech.GetNotificationsAsync(Mekashron.IICUTechService.GetNotificationsRequest request) {
            return base.Channel.GetNotificationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetNotificationsResponse> GetNotificationsAsync(int EntityID, string Username, string Password, string UDID, int ResultType, int LimitFrom, int LimitTo) {
            Mekashron.IICUTechService.GetNotificationsRequest inValue = new Mekashron.IICUTechService.GetNotificationsRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.UDID = UDID;
            inValue.ResultType = ResultType;
            inValue.LimitFrom = LimitFrom;
            inValue.LimitTo = LimitTo;
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetNotificationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetNotificationsCountResponse Mekashron.IICUTechService.IICUTech.GetNotificationsCount(Mekashron.IICUTechService.GetNotificationsCountRequest request) {
            return base.Channel.GetNotificationsCount(request);
        }
        
        public string GetNotificationsCount(int EntityID, string Username, string Password, string UDID, int ResultType) {
            Mekashron.IICUTechService.GetNotificationsCountRequest inValue = new Mekashron.IICUTechService.GetNotificationsCountRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.UDID = UDID;
            inValue.ResultType = ResultType;
            Mekashron.IICUTechService.GetNotificationsCountResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetNotificationsCount(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetNotificationsCountResponse> Mekashron.IICUTechService.IICUTech.GetNotificationsCountAsync(Mekashron.IICUTechService.GetNotificationsCountRequest request) {
            return base.Channel.GetNotificationsCountAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetNotificationsCountResponse> GetNotificationsCountAsync(int EntityID, string Username, string Password, string UDID, int ResultType) {
            Mekashron.IICUTechService.GetNotificationsCountRequest inValue = new Mekashron.IICUTechService.GetNotificationsCountRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.UDID = UDID;
            inValue.ResultType = ResultType;
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetNotificationsCountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.AddClipResponse Mekashron.IICUTechService.IICUTech.AddClip(Mekashron.IICUTechService.AddClipRequest request) {
            return base.Channel.AddClip(request);
        }
        
        public string AddClip(int EntityId, string UserName, string Password, int cameraID, int clipID, int ClipLength, string ClipDate) {
            Mekashron.IICUTechService.AddClipRequest inValue = new Mekashron.IICUTechService.AddClipRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.cameraID = cameraID;
            inValue.clipID = clipID;
            inValue.ClipLength = ClipLength;
            inValue.ClipDate = ClipDate;
            Mekashron.IICUTechService.AddClipResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).AddClip(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.AddClipResponse> Mekashron.IICUTechService.IICUTech.AddClipAsync(Mekashron.IICUTechService.AddClipRequest request) {
            return base.Channel.AddClipAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.AddClipResponse> AddClipAsync(int EntityId, string UserName, string Password, int cameraID, int clipID, int ClipLength, string ClipDate) {
            Mekashron.IICUTechService.AddClipRequest inValue = new Mekashron.IICUTechService.AddClipRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.cameraID = cameraID;
            inValue.clipID = clipID;
            inValue.ClipLength = ClipLength;
            inValue.ClipDate = ClipDate;
            return ((Mekashron.IICUTechService.IICUTech)(this)).AddClipAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetClipsResponse Mekashron.IICUTechService.IICUTech.GetClips(Mekashron.IICUTechService.GetClipsRequest request) {
            return base.Channel.GetClips(request);
        }
        
        public string GetClips(int EntityId, string UserName, string Password, int ResultType, int cameraID, string DateFrom, string DateTo, int LimitFrom, int LimitTo) {
            Mekashron.IICUTechService.GetClipsRequest inValue = new Mekashron.IICUTechService.GetClipsRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.ResultType = ResultType;
            inValue.cameraID = cameraID;
            inValue.DateFrom = DateFrom;
            inValue.DateTo = DateTo;
            inValue.LimitFrom = LimitFrom;
            inValue.LimitTo = LimitTo;
            Mekashron.IICUTechService.GetClipsResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetClips(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetClipsResponse> Mekashron.IICUTechService.IICUTech.GetClipsAsync(Mekashron.IICUTechService.GetClipsRequest request) {
            return base.Channel.GetClipsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetClipsResponse> GetClipsAsync(int EntityId, string UserName, string Password, int ResultType, int cameraID, string DateFrom, string DateTo, int LimitFrom, int LimitTo) {
            Mekashron.IICUTechService.GetClipsRequest inValue = new Mekashron.IICUTechService.GetClipsRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.ResultType = ResultType;
            inValue.cameraID = cameraID;
            inValue.DateFrom = DateFrom;
            inValue.DateTo = DateTo;
            inValue.LimitFrom = LimitFrom;
            inValue.LimitTo = LimitTo;
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetClipsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.GetClipsCountResponse Mekashron.IICUTechService.IICUTech.GetClipsCount(Mekashron.IICUTechService.GetClipsCountRequest request) {
            return base.Channel.GetClipsCount(request);
        }
        
        public string GetClipsCount(int EntityId, string UserName, string Password, int ResultType, int cameraID, string DateFrom, string DateTo) {
            Mekashron.IICUTechService.GetClipsCountRequest inValue = new Mekashron.IICUTechService.GetClipsCountRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.ResultType = ResultType;
            inValue.cameraID = cameraID;
            inValue.DateFrom = DateFrom;
            inValue.DateTo = DateTo;
            Mekashron.IICUTechService.GetClipsCountResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).GetClipsCount(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.GetClipsCountResponse> Mekashron.IICUTechService.IICUTech.GetClipsCountAsync(Mekashron.IICUTechService.GetClipsCountRequest request) {
            return base.Channel.GetClipsCountAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.GetClipsCountResponse> GetClipsCountAsync(int EntityId, string UserName, string Password, int ResultType, int cameraID, string DateFrom, string DateTo) {
            Mekashron.IICUTechService.GetClipsCountRequest inValue = new Mekashron.IICUTechService.GetClipsCountRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.ResultType = ResultType;
            inValue.cameraID = cameraID;
            inValue.DateFrom = DateFrom;
            inValue.DateTo = DateTo;
            return ((Mekashron.IICUTechService.IICUTech)(this)).GetClipsCountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.DeleteNotificationResponse Mekashron.IICUTechService.IICUTech.DeleteNotification(Mekashron.IICUTechService.DeleteNotificationRequest request) {
            return base.Channel.DeleteNotification(request);
        }
        
        public string DeleteNotification(int EntityID, string Username, string Password, int NotificationID) {
            Mekashron.IICUTechService.DeleteNotificationRequest inValue = new Mekashron.IICUTechService.DeleteNotificationRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.NotificationID = NotificationID;
            Mekashron.IICUTechService.DeleteNotificationResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).DeleteNotification(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.DeleteNotificationResponse> Mekashron.IICUTechService.IICUTech.DeleteNotificationAsync(Mekashron.IICUTechService.DeleteNotificationRequest request) {
            return base.Channel.DeleteNotificationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.DeleteNotificationResponse> DeleteNotificationAsync(int EntityID, string Username, string Password, int NotificationID) {
            Mekashron.IICUTechService.DeleteNotificationRequest inValue = new Mekashron.IICUTechService.DeleteNotificationRequest();
            inValue.EntityID = EntityID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.NotificationID = NotificationID;
            return ((Mekashron.IICUTechService.IICUTech)(this)).DeleteNotificationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.EncryptResponse Mekashron.IICUTechService.IICUTech.Encrypt(Mekashron.IICUTechService.EncryptRequest request) {
            return base.Channel.Encrypt(request);
        }
        
        public string Encrypt(string DataString) {
            Mekashron.IICUTechService.EncryptRequest inValue = new Mekashron.IICUTechService.EncryptRequest();
            inValue.DataString = DataString;
            Mekashron.IICUTechService.EncryptResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).Encrypt(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.EncryptResponse> Mekashron.IICUTechService.IICUTech.EncryptAsync(Mekashron.IICUTechService.EncryptRequest request) {
            return base.Channel.EncryptAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.EncryptResponse> EncryptAsync(string DataString) {
            Mekashron.IICUTechService.EncryptRequest inValue = new Mekashron.IICUTechService.EncryptRequest();
            inValue.DataString = DataString;
            return ((Mekashron.IICUTechService.IICUTech)(this)).EncryptAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mekashron.IICUTechService.CryptResponse Mekashron.IICUTechService.IICUTech.Crypt(Mekashron.IICUTechService.CryptRequest request) {
            return base.Channel.Crypt(request);
        }
        
        public string Crypt(int EntityId, string UserName, string Password, string FuncPassword) {
            Mekashron.IICUTechService.CryptRequest inValue = new Mekashron.IICUTechService.CryptRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.FuncPassword = FuncPassword;
            Mekashron.IICUTechService.CryptResponse retVal = ((Mekashron.IICUTechService.IICUTech)(this)).Crypt(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Mekashron.IICUTechService.CryptResponse> Mekashron.IICUTechService.IICUTech.CryptAsync(Mekashron.IICUTechService.CryptRequest request) {
            return base.Channel.CryptAsync(request);
        }
        
        public System.Threading.Tasks.Task<Mekashron.IICUTechService.CryptResponse> CryptAsync(int EntityId, string UserName, string Password, string FuncPassword) {
            Mekashron.IICUTechService.CryptRequest inValue = new Mekashron.IICUTechService.CryptRequest();
            inValue.EntityId = EntityId;
            inValue.UserName = UserName;
            inValue.Password = Password;
            inValue.FuncPassword = FuncPassword;
            return ((Mekashron.IICUTechService.IICUTech)(this)).CryptAsync(inValue);
        }
    }
}
